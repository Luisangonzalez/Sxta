namespace Sxta.Rti1516.LowLevelManagement
{
    using System;
    using Hla.Rti1516;
    using Sxta.Rti1516.Channels;
    using Sxta.Rti1516.Serializers.XrtiEncoding;
    using Sxta.Rti1516.Interactions;

    ///<summary>
    ///Autogenerated interaction listener interface. 
    ///</summary>
    /// <author> Sxta.Rti1516.DynamicCompiler.DynamicCompiler from Low Level Management Object Model </author>
    public interface ILowLevelManagementObjectModelInteractionListener : IInteractionListener
    {
        ///<summary>
        ///Requests a block of handles. 
        ///</summary>
        ///<param name="msg"> the message associated with the interaction</param>
        ///<exception cref="InteractionClassNotRecognized"> if the interaction class was not recognized</exception>
        ///<exception cref="InteractionParameterNotRecognized"> if a parameter of the interaction was not
        /// recognized</exception>
        ///<exception cref="InteractionClassNotSubscribed"> if the federate had not subscribed to the
        /// interaction class</exception>
        ///<exception cref="FederateInternalError"> if an error occurs in the federate</exception>
        void OnReceiveHLArequestHandles(HLArequestHandlesMessage msg);


        ///<summary>
        ///Reports a block of handles. 
        ///</summary>
        ///<param name="msg"> the message associated with the interaction</param>
        ///<exception cref="InteractionClassNotRecognized"> if the interaction class was not recognized</exception>
        ///<exception cref="InteractionParameterNotRecognized"> if a parameter of the interaction was not
        /// recognized</exception>
        ///<exception cref="InteractionClassNotSubscribed"> if the federate had not subscribed to the
        /// interaction class</exception>
        ///<exception cref="FederateInternalError"> if an error occurs in the federate</exception>
        void OnReceiveHLAreportHandles(HLAreportHandlesMessage msg);


        ///<summary>
        ///Registers a new object instance. 
        ///</summary>
        ///<param name="msg"> the message associated with the interaction</param>
        ///<exception cref="InteractionClassNotRecognized"> if the interaction class was not recognized</exception>
        ///<exception cref="InteractionParameterNotRecognized"> if a parameter of the interaction was not
        /// recognized</exception>
        ///<exception cref="InteractionClassNotSubscribed"> if the federate had not subscribed to the
        /// interaction class</exception>
        ///<exception cref="FederateInternalError"> if an error occurs in the federate</exception>
        void OnReceiveHLAregisterObjectInstance(HLAregisterObjectInstanceMessage msg);


        ///<summary>
        ///Registers a new object instance. 
        ///</summary>
        ///<param name="msg"> the message associated with the interaction</param>
        ///<exception cref="InteractionClassNotRecognized"> if the interaction class was not recognized</exception>
        ///<exception cref="InteractionParameterNotRecognized"> if a parameter of the interaction was not
        /// recognized</exception>
        ///<exception cref="InteractionClassNotSubscribed"> if the federate had not subscribed to the
        /// interaction class</exception>
        ///<exception cref="FederateInternalError"> if an error occurs in the federate</exception>
        void OnReceiveHLAregisterObjectInstanceWithTime(HLAregisterObjectInstanceWithTimeMessage msg);


        ///<summary>
        ///Requests an attribute value update. 
        ///</summary>
        ///<param name="msg"> the message associated with the interaction</param>
        ///<exception cref="InteractionClassNotRecognized"> if the interaction class was not recognized</exception>
        ///<exception cref="InteractionParameterNotRecognized"> if a parameter of the interaction was not
        /// recognized</exception>
        ///<exception cref="InteractionClassNotSubscribed"> if the federate had not subscribed to the
        /// interaction class</exception>
        ///<exception cref="FederateInternalError"> if an error occurs in the federate</exception>
        void OnReceiveHLArequestAttributeValueUpdate(HLArequestAttributeValueUpdateMessage msg);


        ///<summary>
        ///Updates a set of attribute values with best-effort transportation
        ///and receive ordering. 
        ///</summary>
        ///<param name="msg"> the message associated with the interaction</param>
        ///<exception cref="InteractionClassNotRecognized"> if the interaction class was not recognized</exception>
        ///<exception cref="InteractionParameterNotRecognized"> if a parameter of the interaction was not
        /// recognized</exception>
        ///<exception cref="InteractionClassNotSubscribed"> if the federate had not subscribed to the
        /// interaction class</exception>
        ///<exception cref="FederateInternalError"> if an error occurs in the federate</exception>
        void OnReceiveHLAupdateAttributeValuesBestEffortWithTime(HLAupdateAttributeValuesBestEffortWithTimeMessage msg);


        ///<summary>
        ///Updates a set of attribute values with reliable transportation and
        ///receive ordering. 
        ///</summary>
        ///<param name="msg"> the message associated with the interaction</param>
        ///<exception cref="InteractionClassNotRecognized"> if the interaction class was not recognized</exception>
        ///<exception cref="InteractionParameterNotRecognized"> if a parameter of the interaction was not
        /// recognized</exception>
        ///<exception cref="InteractionClassNotSubscribed"> if the federate had not subscribed to the
        /// interaction class</exception>
        ///<exception cref="FederateInternalError"> if an error occurs in the federate</exception>
        void OnReceiveHLAupdateAttributeValuesReliableWithTime(HLAupdateAttributeValuesReliableWithTimeMessage msg);


        ///<summary>
        ///Updates a set of attribute values with best-effort transportation
        ///and receive ordering. 
        ///</summary>
        ///<param name="msg"> the message associated with the interaction</param>
        ///<exception cref="InteractionClassNotRecognized"> if the interaction class was not recognized</exception>
        ///<exception cref="InteractionParameterNotRecognized"> if a parameter of the interaction was not
        /// recognized</exception>
        ///<exception cref="InteractionClassNotSubscribed"> if the federate had not subscribed to the
        /// interaction class</exception>
        ///<exception cref="FederateInternalError"> if an error occurs in the federate</exception>
        void OnReceiveHLAupdateAttributeValuesBestEffort(HLAupdateAttributeValuesBestEffortMessage msg);


        ///<summary>
        ///Updates a set of attribute values with reliable transportation and
        ///receive ordering. 
        ///</summary>
        ///<param name="msg"> the message associated with the interaction</param>
        ///<exception cref="InteractionClassNotRecognized"> if the interaction class was not recognized</exception>
        ///<exception cref="InteractionParameterNotRecognized"> if a parameter of the interaction was not
        /// recognized</exception>
        ///<exception cref="InteractionClassNotSubscribed"> if the federate had not subscribed to the
        /// interaction class</exception>
        ///<exception cref="FederateInternalError"> if an error occurs in the federate</exception>
        void OnReceiveHLAupdateAttributeValuesReliable(HLAupdateAttributeValuesReliableMessage msg);

    }

    ///<summary>
    ///Abstract class that implements methods OnReceiveXXXBase to fix delegate problem in dispatcher
    ///TODO DynamicCompiler: Esta clase puede que interese ser generada por el DinamycCompiler
    ///</summary>
    /// <author> ÁNGEL </author>
    public abstract class AbstractLowLevelManagementObjectModelInteractionListener : ILowLevelManagementObjectModelInteractionListener
    {

        protected String federationName;

        public AbstractLowLevelManagementObjectModelInteractionListener(String aFederationName)
        {
            federationName = aFederationName;
        }

        ///<summary>
        ///Requests a block of handles. 
        ///</summary>
        ///<param name="msg"> the message associated with the interaction</param>
        ///<exception cref="InteractionClassNotRecognized"> if the interaction class was not recognized</exception>
        ///<exception cref="InteractionParameterNotRecognized"> if a parameter of the interaction was not
        /// recognized</exception>
        ///<exception cref="InteractionClassNotSubscribed"> if the federate had not subscribed to the
        /// interaction class</exception>
        ///<exception cref="FederateInternalError"> if an error occurs in the federate</exception>
        public abstract void OnReceiveHLArequestHandles(HLArequestHandlesMessage msg);

        public void OnReceiveHLArequestHandlesBase(BaseInteractionMessage msg)
        {
            OnReceiveHLArequestHandles(msg as HLArequestHandlesMessage);
        }

        ///<summary>
        ///Reports a block of handles. 
        ///</summary>
        ///<param name="msg"> the message associated with the interaction</param>
        ///<exception cref="InteractionClassNotRecognized"> if the interaction class was not recognized</exception>
        ///<exception cref="InteractionParameterNotRecognized"> if a parameter of the interaction was not
        /// recognized</exception>
        ///<exception cref="InteractionClassNotSubscribed"> if the federate had not subscribed to the
        /// interaction class</exception>
        ///<exception cref="FederateInternalError"> if an error occurs in the federate</exception>
        public abstract void OnReceiveHLAreportHandles(HLAreportHandlesMessage msg);

        public void OnReceiveHLAreportHandlesBase(BaseInteractionMessage msg)
        {
            OnReceiveHLAreportHandles(msg as HLAreportHandlesMessage);
        }

        ///<summary>
        ///Registers a new object instance. 
        ///</summary>
        ///<param name="msg"> the message associated with the interaction</param>
        ///<exception cref="InteractionClassNotRecognized"> if the interaction class was not recognized</exception>
        ///<exception cref="InteractionParameterNotRecognized"> if a parameter of the interaction was not
        /// recognized</exception>
        ///<exception cref="InteractionClassNotSubscribed"> if the federate had not subscribed to the
        /// interaction class</exception>
        ///<exception cref="FederateInternalError"> if an error occurs in the federate</exception>
        public abstract void OnReceiveHLAregisterObjectInstance(HLAregisterObjectInstanceMessage msg);

        public void OnReceiveHLAregisterObjectInstanceBase(BaseInteractionMessage msg)
        {
            OnReceiveHLAregisterObjectInstance(msg as HLAregisterObjectInstanceMessage);
        }

        ///<summary>
        ///Registers a new object instance. 
        ///</summary>
        ///<param name="msg"> the message associated with the interaction</param>
        ///<exception cref="InteractionClassNotRecognized"> if the interaction class was not recognized</exception>
        ///<exception cref="InteractionParameterNotRecognized"> if a parameter of the interaction was not
        /// recognized</exception>
        ///<exception cref="InteractionClassNotSubscribed"> if the federate had not subscribed to the
        /// interaction class</exception>
        ///<exception cref="FederateInternalError"> if an error occurs in the federate</exception>
        public abstract void OnReceiveHLAregisterObjectInstanceWithTime(HLAregisterObjectInstanceWithTimeMessage msg);

        public void OnReceiveHLAregisterObjectInstanceWithTimeBase(BaseInteractionMessage msg)
        {
            OnReceiveHLAregisterObjectInstanceWithTime(msg as HLAregisterObjectInstanceWithTimeMessage);
        }

        ///<summary>
        ///Requests an attribute value update. 
        ///</summary>
        ///<param name="msg"> the message associated with the interaction</param>
        ///<exception cref="InteractionClassNotRecognized"> if the interaction class was not recognized</exception>
        ///<exception cref="InteractionParameterNotRecognized"> if a parameter of the interaction was not
        /// recognized</exception>
        ///<exception cref="InteractionClassNotSubscribed"> if the federate had not subscribed to the
        /// interaction class</exception>
        ///<exception cref="FederateInternalError"> if an error occurs in the federate</exception>
        public abstract void OnReceiveHLArequestAttributeValueUpdate(HLArequestAttributeValueUpdateMessage msg);

        public void OnReceiveHLArequestAttributeValueUpdateBase(BaseInteractionMessage msg)
        {
            OnReceiveHLArequestAttributeValueUpdate(msg as HLArequestAttributeValueUpdateMessage);
        }

        ///<summary>
        ///Updates a set of attribute values with best-effort transportation
        ///and receive ordering. 
        ///</summary>
        ///<param name="msg"> the message associated with the interaction</param>
        ///<exception cref="InteractionClassNotRecognized"> if the interaction class was not recognized</exception>
        ///<exception cref="InteractionParameterNotRecognized"> if a parameter of the interaction was not
        /// recognized</exception>
        ///<exception cref="InteractionClassNotSubscribed"> if the federate had not subscribed to the
        /// interaction class</exception>
        ///<exception cref="FederateInternalError"> if an error occurs in the federate</exception>
        public abstract void OnReceiveHLAupdateAttributeValuesBestEffortWithTime(HLAupdateAttributeValuesBestEffortWithTimeMessage msg);

        public void OnReceiveHLAupdateAttributeValuesBestEffortWithTimeBase(BaseInteractionMessage msg)
        {
            OnReceiveHLAupdateAttributeValuesBestEffortWithTime(msg as HLAupdateAttributeValuesBestEffortWithTimeMessage);
        }

        ///<summary>
        ///Updates a set of attribute values with reliable transportation and
        ///receive ordering. 
        ///</summary>
        ///<param name="msg"> the message associated with the interaction</param>
        ///<exception cref="InteractionClassNotRecognized"> if the interaction class was not recognized</exception>
        ///<exception cref="InteractionParameterNotRecognized"> if a parameter of the interaction was not
        /// recognized</exception>
        ///<exception cref="InteractionClassNotSubscribed"> if the federate had not subscribed to the
        /// interaction class</exception>
        ///<exception cref="FederateInternalError"> if an error occurs in the federate</exception>
        public abstract void OnReceiveHLAupdateAttributeValuesReliableWithTime(HLAupdateAttributeValuesReliableWithTimeMessage msg);

        public void OnReceiveHLAupdateAttributeValuesReliableWithTimeBase(BaseInteractionMessage msg)
        {
            OnReceiveHLAupdateAttributeValuesReliableWithTime(msg as HLAupdateAttributeValuesReliableWithTimeMessage);
        }

        ///<summary>
        ///Updates a set of attribute values with best-effort transportation
        ///and receive ordering. 
        ///</summary>
        ///<param name="msg"> the message associated with the interaction</param>
        ///<exception cref="InteractionClassNotRecognized"> if the interaction class was not recognized</exception>
        ///<exception cref="InteractionParameterNotRecognized"> if a parameter of the interaction was not
        /// recognized</exception>
        ///<exception cref="InteractionClassNotSubscribed"> if the federate had not subscribed to the
        /// interaction class</exception>
        ///<exception cref="FederateInternalError"> if an error occurs in the federate</exception>
        public abstract void OnReceiveHLAupdateAttributeValuesBestEffort(HLAupdateAttributeValuesBestEffortMessage msg);

        public void OnReceiveHLAupdateAttributeValuesBestEffortBase(BaseInteractionMessage msg)
        {
            OnReceiveHLAupdateAttributeValuesBestEffort(msg as HLAupdateAttributeValuesBestEffortMessage);
        }

        ///<summary>
        ///Updates a set of attribute values with reliable transportation and
        ///receive ordering. 
        ///</summary>
        ///<param name="msg"> the message associated with the interaction</param>
        ///<exception cref="InteractionClassNotRecognized"> if the interaction class was not recognized</exception>
        ///<exception cref="InteractionParameterNotRecognized"> if a parameter of the interaction was not
        /// recognized</exception>
        ///<exception cref="InteractionClassNotSubscribed"> if the federate had not subscribed to the
        /// interaction class</exception>
        ///<exception cref="FederateInternalError"> if an error occurs in the federate</exception>
        public abstract void OnReceiveHLAupdateAttributeValuesReliable(HLAupdateAttributeValuesReliableMessage msg);

        public void OnReceiveHLAupdateAttributeValuesReliableBase(BaseInteractionMessage msg)
        {
            OnReceiveHLAupdateAttributeValuesReliable(msg as HLAupdateAttributeValuesReliableMessage);
        }

        public abstract void ReceiveInteraction(BaseInteractionMessage msg);

    }
}
