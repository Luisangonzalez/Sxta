namespace Sxta.Rti1516.Management
{
    using System;

    using Hla.Rti1516;
    using Sxta.Rti1516.Reflection;
    using Sxta.Rti1516.Serializers.XrtiEncoding;
    using Sxta.Rti1516.Interactions;
    using Sxta.Rti1516.BoostrapProtocol;
    using Sxta.Rti1516.XrtiHandles;

    ///<summary>
    ///Autogenerated interaction and serializer registration Helper. 
    ///</summary>
    /// <author> Sxta1516.DynamicCompiler.DynamicCompiler from Management Object Model </author>
    [HLAinteractionHelperAttribute(Name = "ManagementObjectModelInteractionHelper",
                                     FomName = "Management Object Model", 
                                     Semantics = "A Listener Manager and serializer manager")]
    public class ManagementObjectModelInteractionHelper
    {
        InteractionManager manager;

        /// <summary>Constructor.</summary>
        /// <param name="interactionManager"> the run-time interaction manager</param>
        public ManagementObjectModelInteractionHelper(InteractionManager interactionManager)
        {
            Type objType;
            manager = interactionManager;
            XrtiSerializerManager serializerMngr = manager.SerializerManager;
            long handle;
            ObjectClassDescriptor ocd;

            /*
            ocd = manager.DescriptorManager.GetObjectClassDescriptor("HLAfederate");

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAfederateHandle").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederatePropertyHLAfederateHandleXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAfederateType").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederatePropertyHLAfederateTypeXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAfederateHost").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederatePropertyHLAfederateHostXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLARTIversion").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederatePropertyHLARTIversionXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAFDDID").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederatePropertyHLAFDDIDXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAtimeConstrained").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederatePropertyHLAtimeConstrainedXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAtimeRegulating").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederatePropertyHLAtimeRegulatingXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAasynchronousDelivery").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederatePropertyHLAasynchronousDeliveryXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAfederateState").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederatePropertyHLAfederateStateXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAtimeManagerState").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederatePropertyHLAtimeManagerStateXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAlogicalTime").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederatePropertyHLAlogicalTimeXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAlookahead").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederatePropertyHLAlookaheadXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAGALT").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederatePropertyHLAGALTXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLALITS").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederatePropertyHLALITSXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAROlength").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederatePropertyHLAROlengthXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLATSOlength").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederatePropertyHLATSOlengthXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAreflectionsReceived").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederatePropertyHLAreflectionsReceivedXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAupdatesSent").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederatePropertyHLAupdatesSentXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAinteractionsReceived").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederatePropertyHLAinteractionsReceivedXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAinteractionsSent").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederatePropertyHLAinteractionsSentXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAobjectsInstancesThatCanBeDeleted").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederatePropertyHLAobjectsInstancesThatCanBeDeletedXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAobjectInstancesUpdated").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederatePropertyHLAobjectInstancesUpdatedXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAobjectInstancesReflected").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederatePropertyHLAobjectInstancesReflectedXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAobjectInstancesDeleted").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederatePropertyHLAobjectInstancesDeletedXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAobjectInstancesRemoved").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederatePropertyHLAobjectInstancesRemovedXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAobjectInstancesRegistered").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederatePropertyHLAobjectInstancesRegisteredXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAobjectInstancesDiscovered").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederatePropertyHLAobjectInstancesDiscoveredXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAtimeGrantedTime").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederatePropertyHLAtimeGrantedTimeXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAtimeAdvancingTime").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederatePropertyHLAtimeAdvancingTimeXrtiSerializer(serializerMngr));
            */

            ocd = manager.DescriptorManager.GetObjectClassDescriptor("HLAfederation");
            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAfederationName").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederationPropertyHLAfederationNameXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAfederatesinFederation").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederationPropertyHLAfederatesinFederationXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLARTIversion").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederationPropertyHLARTIversionXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAFDDID").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederationPropertyHLAFDDIDXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAlastSaveName").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederationPropertyHLAlastSaveNameXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAlastSaveTime").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederationPropertyHLAlastSaveTimeXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAnextSaveName").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederationPropertyHLAnextSaveNameXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAnextSaveTime").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederationPropertyHLAnextSaveTimeXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAautoProvide").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederationPropertyHLAautoProvideXrtiSerializer(serializerMngr));

            handle = ((XRTIAttributeHandle)ocd.GetAttributeDescriptor("HLAconveyRegionDesignatorSets").Handle).Identifier;
            serializerMngr.RegisterSerializer(null, handle, new HLAfederationPropertyHLAconveyRegionDesignatorSetsXrtiSerializer(serializerMngr));

            /*
            objType = typeof(HLAinteractionRootMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAinteractionRoot", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAinteractionRoot").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAinteractionRootMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAmanagerMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAmanager", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAmanager").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAmanagerMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAfederateMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAfederate", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAfederate").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAfederateMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAadjustFederateMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAadjustFederate", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAadjustFederate").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAadjustFederateMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAsetTimingMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAsetTiming", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAsetTiming").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAsetTimingMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAmodifyAttributeStateMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAmodifyAttributeState", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAmodifyAttributeState").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAmodifyAttributeStateMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAsetServiceReportingMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAsetServiceReporting", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAsetServiceReporting").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAsetServiceReportingMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAsetExceptionReportingMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAsetExceptionReporting", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAsetExceptionReporting").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAsetExceptionReportingMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLArequestMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLArequest", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLArequest").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLArequestMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLArequestPublicationsMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLArequestPublications", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLArequestPublications").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLArequestPublicationsMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLArequestSubscriptionsMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLArequestSubscriptions", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLArequestSubscriptions").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLArequestSubscriptionsMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLArequestObjectInstancesThatCanBeDeletedMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLArequestObjectInstancesThatCanBeDeleted", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLArequestObjectInstancesThatCanBeDeleted").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLArequestObjectInstancesThatCanBeDeletedMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLArequestObjectInstancesUpdatedMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLArequestObjectInstancesUpdated", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLArequestObjectInstancesUpdated").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLArequestObjectInstancesUpdatedMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLArequestObjectInstancesReflectedMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLArequestObjectInstancesReflected", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLArequestObjectInstancesReflected").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLArequestObjectInstancesReflectedMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLArequestUpdatesSentMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLArequestUpdatesSent", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLArequestUpdatesSent").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLArequestUpdatesSentMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLArequestInteractionsSentMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLArequestInteractionsSent", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLArequestInteractionsSent").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLArequestInteractionsSentMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLArequestReflectionsReceivedMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLArequestReflectionsReceived", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLArequestReflectionsReceived").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLArequestReflectionsReceivedMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLArequestInteractionsReceivedMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLArequestInteractionsReceived", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLArequestInteractionsReceived").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLArequestInteractionsReceivedMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLArequestObjectInstanceInformationMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLArequestObjectInstanceInformation", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLArequestObjectInstanceInformation").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLArequestObjectInstanceInformationMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLArequestSynchronizationPointsMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLArequestSynchronizationPoints", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLArequestSynchronizationPoints").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLArequestSynchronizationPointsMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLArequestSynchronizationPointStatusMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLArequestSynchronizationPointStatus", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLArequestSynchronizationPointStatus").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLArequestSynchronizationPointStatusMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAreportMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAreport", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAreport").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAreportMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAreportObjectClassPublicationMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAreportObjectClassPublication", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAreportObjectClassPublication").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAreportObjectClassPublicationMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAreportObjectClassSubscriptionMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAreportObjectClassSubscription", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAreportObjectClassSubscription").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAreportObjectClassSubscriptionMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAreportInteractionPublicationMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAreportInteractionPublication", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAreportInteractionPublication").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAreportInteractionPublicationMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAreportInteractionSubscriptionMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAreportInteractionSubscription", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAreportInteractionSubscription").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAreportInteractionSubscriptionMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAreportObjectInstancesThatCanBeDeletedMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAreportObjectInstancesThatCanBeDeleted", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAreportObjectInstancesThatCanBeDeleted").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAreportObjectInstancesThatCanBeDeletedMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAreportObjectInstancesUpdatedMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAreportObjectInstancesUpdated", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAreportObjectInstancesUpdated").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAreportObjectInstancesUpdatedMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAreportObjectInstancesReflectedMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAreportObjectInstancesReflected", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAreportObjectInstancesReflected").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAreportObjectInstancesReflectedMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAreportUpdatesSentMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAreportUpdatesSent", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAreportUpdatesSent").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAreportUpdatesSentMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAreportReflectionsReceivedMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAreportReflectionsReceived", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAreportReflectionsReceived").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAreportReflectionsReceivedMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAreportInteractionsSentMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAreportInteractionsSent", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAreportInteractionsSent").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAreportInteractionsSentMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAreportInteractionsReceivedMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAreportInteractionsReceived", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAreportInteractionsReceived").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAreportInteractionsReceivedMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAreportObjectInstanceInformationMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAreportObjectInstanceInformation", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAreportObjectInstanceInformation").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAreportObjectInstanceInformationMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAreportExceptionMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAreportException", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAreportException").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAreportExceptionMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAreportServiceInvocationMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAreportServiceInvocation", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAreportServiceInvocation").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAreportServiceInvocationMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAreportMOMexceptionMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAreportMOMexception", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAreportMOMexception").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAreportMOMexceptionMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAreportSynchronizationPointsMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAreportSynchronizationPoints", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAreportSynchronizationPoints").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAreportSynchronizationPointsMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAreportSynchronizationPointStatusMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAreportSynchronizationPointStatus", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAreportSynchronizationPointStatus").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAreportSynchronizationPointStatusMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAserviceMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAservice", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAservice").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAserviceMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAresignFederationExecutionMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAresignFederationExecution", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAresignFederationExecution").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAresignFederationExecutionMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAsynchronizationPointAchievedMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAsynchronizationPointAchieved", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAsynchronizationPointAchieved").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAsynchronizationPointAchievedMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAfederateSaveBegunMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAfederateSaveBegun", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAfederateSaveBegun").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAfederateSaveBegunMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAfederateSaveCompleteMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAfederateSaveComplete", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAfederateSaveComplete").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAfederateSaveCompleteMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAfederateRestoreCompleteMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAfederateRestoreComplete", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAfederateRestoreComplete").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAfederateRestoreCompleteMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLApublishObjectClassAttributesMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLApublishObjectClassAttributes", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLApublishObjectClassAttributes").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLApublishObjectClassAttributesMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAunpublishObjectClassAttributesMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAunpublishObjectClassAttributes", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAunpublishObjectClassAttributes").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAunpublishObjectClassAttributesMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLApublishInteractionClassMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLApublishInteractionClass", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLApublishInteractionClass").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLApublishInteractionClassMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAunpublishInteractionClassMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAunpublishInteractionClass", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAunpublishInteractionClass").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAunpublishInteractionClassMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAsubscribeObjectClassAttributesMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAsubscribeObjectClassAttributes", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAsubscribeObjectClassAttributes").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAsubscribeObjectClassAttributesMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAunsubscribeObjectClassAttributesMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAunsubscribeObjectClassAttributes", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAunsubscribeObjectClassAttributes").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAunsubscribeObjectClassAttributesMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAsubscribeInteractionClassMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAsubscribeInteractionClass", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAsubscribeInteractionClass").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAsubscribeInteractionClassMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAunsubscribeInteractionClassMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAunsubscribeInteractionClass", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAunsubscribeInteractionClass").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAunsubscribeInteractionClassMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAdeleteObjectInstanceMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAdeleteObjectInstance", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAdeleteObjectInstance").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAdeleteObjectInstanceMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAlocalDeleteObjectInstanceMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAlocalDeleteObjectInstance", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAlocalDeleteObjectInstance").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAlocalDeleteObjectInstanceMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAchangeAttributeTransportationTypeMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAchangeAttributeTransportationType", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAchangeAttributeTransportationType").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAchangeAttributeTransportationTypeMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAchangeInteractionTransportationTypeMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAchangeInteractionTransportationType", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAchangeInteractionTransportationType").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAchangeInteractionTransportationTypeMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAunconditionalAttributeOwnershipDivestitureMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAunconditionalAttributeOwnershipDivestiture", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAunconditionalAttributeOwnershipDivestiture").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAunconditionalAttributeOwnershipDivestitureMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAenableTimeRegulationMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAenableTimeRegulation", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAenableTimeRegulation").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAenableTimeRegulationMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAdisableTimeRegulationMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAdisableTimeRegulation", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAdisableTimeRegulation").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAdisableTimeRegulationMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAenableTimeConstrainedMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAenableTimeConstrained", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAenableTimeConstrained").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAenableTimeConstrainedMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAdisableTimeConstrainedMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAdisableTimeConstrained", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAdisableTimeConstrained").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAdisableTimeConstrainedMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAtimeAdvanceRequestMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAtimeAdvanceRequest", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAtimeAdvanceRequest").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAtimeAdvanceRequestMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAtimeAdvanceRequestAvailableMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAtimeAdvanceRequestAvailable", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAtimeAdvanceRequestAvailable").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAtimeAdvanceRequestAvailableMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAnextMessageRequestMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAnextMessageRequest", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAnextMessageRequest").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAnextMessageRequestMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAnextMessageRequestAvailableMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAnextMessageRequestAvailable", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAnextMessageRequestAvailable").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAnextMessageRequestAvailableMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAflushQueueRequestMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAflushQueueRequest", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAflushQueueRequest").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAflushQueueRequestMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAenableAsynchronousDeliveryMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAenableAsynchronousDelivery", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAenableAsynchronousDelivery").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAenableAsynchronousDeliveryMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAdisableAsynchronousDeliveryMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAdisableAsynchronousDelivery", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAdisableAsynchronousDelivery").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAdisableAsynchronousDeliveryMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAmodifyLookaheadMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAmodifyLookahead", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAmodifyLookahead").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAmodifyLookaheadMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAchangeAttributeOrderTypeMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAchangeAttributeOrderType", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAchangeAttributeOrderType").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAchangeAttributeOrderTypeMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAchangeInteractionOrderTypeMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAchangeInteractionOrderType", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAchangeInteractionOrderType").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAchangeInteractionOrderTypeMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAfederationMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAfederation", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAfederation").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAfederationMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAadjustFederationMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAadjustFederation", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAadjustFederation").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAadjustFederationMessageXrtiSerializer(serializerMngr));

            objType = typeof(HLAsetSwitchesMessage);
            manager.AddReceiveInteractionDelegate(objType, "HLAsetSwitches", new InteractionManager.ReceiveInteractionDelegate(this.ReceiveInteraction));
            handle = ((XRTIInteractionClassHandle)manager.DescriptorManager.GetInteractionClassDescriptor("HLAsetSwitches").Handle).Identifier;
            serializerMngr.RegisterSerializer(objType, handle, new HLAsetSwitchesMessageXrtiSerializer(serializerMngr));
        */
        }

        /// <summary>Notifies the listener of a received interaction.</summary>
        /// <param name="msg"> the message of the received interaction</param>
        public void ReceiveInteraction(BaseInteractionMessage msg)
        {
            try
            {
                /*
                if(msg is HLAsetTimingMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAsetTiming(msg as HLAsetTimingMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAmodifyAttributeStateMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAmodifyAttributeState(msg as HLAmodifyAttributeStateMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAsetServiceReportingMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAsetServiceReporting(msg as HLAsetServiceReportingMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAsetExceptionReportingMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAsetExceptionReporting(msg as HLAsetExceptionReportingMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLArequestPublicationsMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLArequestPublications(msg as HLArequestPublicationsMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLArequestSubscriptionsMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLArequestSubscriptions(msg as HLArequestSubscriptionsMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLArequestObjectInstancesThatCanBeDeletedMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLArequestObjectInstancesThatCanBeDeleted(msg as HLArequestObjectInstancesThatCanBeDeletedMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLArequestObjectInstancesUpdatedMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLArequestObjectInstancesUpdated(msg as HLArequestObjectInstancesUpdatedMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLArequestObjectInstancesReflectedMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLArequestObjectInstancesReflected(msg as HLArequestObjectInstancesReflectedMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLArequestUpdatesSentMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLArequestUpdatesSent(msg as HLArequestUpdatesSentMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLArequestInteractionsSentMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLArequestInteractionsSent(msg as HLArequestInteractionsSentMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLArequestReflectionsReceivedMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLArequestReflectionsReceived(msg as HLArequestReflectionsReceivedMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLArequestInteractionsReceivedMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLArequestInteractionsReceived(msg as HLArequestInteractionsReceivedMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLArequestObjectInstanceInformationMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLArequestObjectInstanceInformation(msg as HLArequestObjectInstanceInformationMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLArequestSynchronizationPointsMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLArequestSynchronizationPoints(msg as HLArequestSynchronizationPointsMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLArequestSynchronizationPointStatusMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLArequestSynchronizationPointStatus(msg as HLArequestSynchronizationPointStatusMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAreportObjectClassPublicationMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAreportObjectClassPublication(msg as HLAreportObjectClassPublicationMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAreportObjectClassSubscriptionMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAreportObjectClassSubscription(msg as HLAreportObjectClassSubscriptionMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAreportInteractionPublicationMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAreportInteractionPublication(msg as HLAreportInteractionPublicationMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAreportInteractionSubscriptionMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAreportInteractionSubscription(msg as HLAreportInteractionSubscriptionMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAreportObjectInstancesThatCanBeDeletedMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAreportObjectInstancesThatCanBeDeleted(msg as HLAreportObjectInstancesThatCanBeDeletedMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAreportObjectInstancesUpdatedMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAreportObjectInstancesUpdated(msg as HLAreportObjectInstancesUpdatedMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAreportObjectInstancesReflectedMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAreportObjectInstancesReflected(msg as HLAreportObjectInstancesReflectedMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAreportUpdatesSentMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAreportUpdatesSent(msg as HLAreportUpdatesSentMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAreportReflectionsReceivedMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAreportReflectionsReceived(msg as HLAreportReflectionsReceivedMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAreportInteractionsSentMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAreportInteractionsSent(msg as HLAreportInteractionsSentMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAreportInteractionsReceivedMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAreportInteractionsReceived(msg as HLAreportInteractionsReceivedMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAreportObjectInstanceInformationMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAreportObjectInstanceInformation(msg as HLAreportObjectInstanceInformationMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAreportExceptionMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAreportException(msg as HLAreportExceptionMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAreportServiceInvocationMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAreportServiceInvocation(msg as HLAreportServiceInvocationMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAreportMOMexceptionMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAreportMOMexception(msg as HLAreportMOMexceptionMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAreportSynchronizationPointsMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAreportSynchronizationPoints(msg as HLAreportSynchronizationPointsMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAreportSynchronizationPointStatusMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAreportSynchronizationPointStatus(msg as HLAreportSynchronizationPointStatusMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAresignFederationExecutionMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAresignFederationExecution(msg as HLAresignFederationExecutionMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAsynchronizationPointAchievedMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAsynchronizationPointAchieved(msg as HLAsynchronizationPointAchievedMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAfederateSaveBegunMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAfederateSaveBegun(msg as HLAfederateSaveBegunMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAfederateSaveCompleteMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAfederateSaveComplete(msg as HLAfederateSaveCompleteMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAfederateRestoreCompleteMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAfederateRestoreComplete(msg as HLAfederateRestoreCompleteMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLApublishObjectClassAttributesMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLApublishObjectClassAttributes(msg as HLApublishObjectClassAttributesMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAunpublishObjectClassAttributesMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAunpublishObjectClassAttributes(msg as HLAunpublishObjectClassAttributesMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLApublishInteractionClassMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLApublishInteractionClass(msg as HLApublishInteractionClassMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAunpublishInteractionClassMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAunpublishInteractionClass(msg as HLAunpublishInteractionClassMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAsubscribeObjectClassAttributesMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAsubscribeObjectClassAttributes(msg as HLAsubscribeObjectClassAttributesMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAunsubscribeObjectClassAttributesMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAunsubscribeObjectClassAttributes(msg as HLAunsubscribeObjectClassAttributesMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAsubscribeInteractionClassMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAsubscribeInteractionClass(msg as HLAsubscribeInteractionClassMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAunsubscribeInteractionClassMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAunsubscribeInteractionClass(msg as HLAunsubscribeInteractionClassMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAdeleteObjectInstanceMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAdeleteObjectInstance(msg as HLAdeleteObjectInstanceMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAlocalDeleteObjectInstanceMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAlocalDeleteObjectInstance(msg as HLAlocalDeleteObjectInstanceMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAchangeAttributeTransportationTypeMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAchangeAttributeTransportationType(msg as HLAchangeAttributeTransportationTypeMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAchangeInteractionTransportationTypeMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAchangeInteractionTransportationType(msg as HLAchangeInteractionTransportationTypeMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAunconditionalAttributeOwnershipDivestitureMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAunconditionalAttributeOwnershipDivestiture(msg as HLAunconditionalAttributeOwnershipDivestitureMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAenableTimeRegulationMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAenableTimeRegulation(msg as HLAenableTimeRegulationMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAdisableTimeRegulationMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAdisableTimeRegulation(msg as HLAdisableTimeRegulationMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAenableTimeConstrainedMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAenableTimeConstrained(msg as HLAenableTimeConstrainedMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAdisableTimeConstrainedMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAdisableTimeConstrained(msg as HLAdisableTimeConstrainedMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAtimeAdvanceRequestMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAtimeAdvanceRequest(msg as HLAtimeAdvanceRequestMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAtimeAdvanceRequestAvailableMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAtimeAdvanceRequestAvailable(msg as HLAtimeAdvanceRequestAvailableMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAnextMessageRequestMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAnextMessageRequest(msg as HLAnextMessageRequestMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAnextMessageRequestAvailableMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAnextMessageRequestAvailable(msg as HLAnextMessageRequestAvailableMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAflushQueueRequestMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAflushQueueRequest(msg as HLAflushQueueRequestMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAenableAsynchronousDeliveryMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAenableAsynchronousDelivery(msg as HLAenableAsynchronousDeliveryMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAdisableAsynchronousDeliveryMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAdisableAsynchronousDelivery(msg as HLAdisableAsynchronousDeliveryMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAmodifyLookaheadMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAmodifyLookahead(msg as HLAmodifyLookaheadMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAchangeAttributeOrderTypeMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAchangeAttributeOrderType(msg as HLAchangeAttributeOrderTypeMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAchangeInteractionOrderTypeMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAchangeInteractionOrderType(msg as HLAchangeInteractionOrderTypeMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else if(msg is HLAsetSwitchesMessage)
                {
                    foreach(IInteractionListener il in manager.InteractionListeners)
                    {
                        if (il is IManagementObjectModelInteractionListener)
                            (il as IManagementObjectModelInteractionListener).OnReceiveHLAsetSwitches(msg as HLAsetSwitchesMessage);
                        else
                            il.ReceiveInteraction(msg);
                    }
                }
                else
                 */
                    foreach (IInteractionListener il in manager.InteractionListeners)
                    {
                        il.ReceiveInteraction(msg);
                    }
            }
            catch(System.IO.IOException ioe)
            {
                throw new FederateInternalError(ioe.ToString());
            }

        }
    }
}
