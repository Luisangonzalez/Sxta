namespace Sxta.Rti1516.Base
{
    using System;
    using System.IO;

    using HlaEncodingReader = Sxta.Rti1516.Serializers.XrtiEncoding.HlaEncodingReader;
    using HlaEncodingWriter = Sxta.Rti1516.Serializers.XrtiEncoding.HlaEncodingWriter;

    using Hla.Rti1516;
    using Sxta.Rti1516.Reflection;

    ///<summary>
    ///Autogenerated enumerated data type. 
    ///</summary>
    /// <author> Sxta1516.DynamicCompiler.DynamicCompiler from Management Object Model </author>
    /// TODO ANGEL: Esta clase o la que se encuentra en Sxta.Rti1516.Reflection.HLASwitchType pueden estar duplicadas REVISAR
    [HLAEnumeratedData(Name = "HLAswitch",
                       Representation = "HLAinteger32BE")]
    public enum  HLAswitch
    {
        Enabled = 1,
        Disabled = 0
    }

    [Serializable]
    public sealed class HLAswitchXrtiSerializer
    {
        ///<summary> Reads and returns a HLAswitch from the specified stream.</summary>
        ///<param name="reader"> the input stream to read from</param>
        ///<returns>return the decoded value</returns>
        ///<exception cref="IOException"> if an error occurs</exception>
        public static HLAswitch Deserialize(HlaEncodingReader reader)
        {
            return (HLAswitch)reader.ReadHLAinteger32BE();
        }

        ///<summary>Writes this HLAswitch to the specified stream.</summary>
        ///<param name="writer"> the stream to write to</param>
        ///<exception cref="IOException"> if an error occurs</exception>
        public static void Serialize(HlaEncodingWriter writer, HLAswitch val)
        {
            writer.WriteHLAinteger32BE((int)val);
        }

    }
}
